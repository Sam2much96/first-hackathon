#pragma version 8
intcblock 0 1
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x68afbb5e // "register_player()void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0xf1358a04 // "synchronize_game(uint64,uint64)void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 1
txna ApplicationArgs 2
btoi
store 2
load 1
load 2
callsub synchronizegame_1
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub registerplayer_0
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l8
err
main_l8:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// register_player
registerplayer_0:
proto 0 0
pushbytes 0x47616d65526f756e64 // "GameRound"
intc_0 // 0
app_global_put
retsub

// synchronize_game
synchronizegame_1:
proto 2 0
pushbytes 0x626f617264 // "board"
frame_dig -2
app_global_put
frame_dig -1
intc_0 // 0
==
bnz synchronizegame_1_l5
frame_dig -1
intc_1 // 1
==
bnz synchronizegame_1_l4
frame_dig -1
pushint 2 // 2
==
bz synchronizegame_1_l6
pushbytes 0x706c6179657220776f6e // "player won"
store 0
b synchronizegame_1_l6
synchronizegame_1_l4:
pushbytes 0x626164206d6f7665 // "bad move"
store 0
b synchronizegame_1_l6
synchronizegame_1_l5:
pushbytes 0x706c6179696e67 // "playing"
store 0
synchronizegame_1_l6:
retsub